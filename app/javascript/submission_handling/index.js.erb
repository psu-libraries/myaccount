 function submissionHandling() {
        const buttons = document.querySelectorAll(`input[type=submit]`);
        buttons.forEach( function(b){
            b.onclick = function() {
                let checkboxes = document.querySelectorAll('input#hold_list_.checkbox')
                _.each(checkboxes, function(c) {
                    if (c.checked) {
                        console.log('i ran');
                        let spinner = `<div class="spinner-border" role="status">
                                         <span class="sr-only">Loading...</span>
                                       </div>`
                        document.querySelector(`#hold${c.value} .pickup_at`).innerHTML = spinner;
                    }
                });
                let holdIds = _.compact(
                                 _.map(checkboxes, function(c) {
                                    if (c.checked) { return c.value }
                                 })
                              );
                _.each(holdIds, function(h) {
                    renderData(h);
                });
            }
        });
    }

    async function renderData(h) {
        await pollFetch(h);
        deleteData(h);
        return
    }

    function wait(ms = 1000) {
        return new Promise(resolve => {
            console.log(`waiting ${ms} ms...`);
            setTimeout(resolve, ms);
        });
    }

    async function pollFetch(holdId) {
     let endTime = Number(new Date()) + 20000;

      try {
        let result = await getJobInfo(holdId);
        while (checkResults(result) && Number(new Date()) < endTime) {
          await wait(1000);
            console.log('here2');
          result = await getJobInfo(holdId);
        }

        updateDOM(result);
      }
      catch {
          console.log('failure')
      }
    }

    function updateDOM(data) {
        document.querySelector(`#hold${data.hold_id} .pickup_at`).innerHTML = data.new_value;
    }

    async function getJobInfo(holdId) {
        console.log('here1');
        let response = await fetch(`/redis_jobs/${holdId}`);
        let data = await response.json();
        return data;
    }

    function checkResults(data) {
        console.log(data);
      if (data) {
        if (data.result === 'success' || data.result === 'failure') {
// add a delete of the redis key once it has been processed              fetch(`/redis_jobs/${holdId}`)
            return false;
        }
          console.log('result is false2');
          return true;
      }
      console.log('result is false');
      return true;
    }

    async function deleteData(item) {
    console.log('deletion');
        await fetch(`/redis_jobs/${item}`, { method: 'delete'});
        return;
    }
//
export default submissionHandling
 