<% unless patron.standing_human.blank? %>
  <div class="page-section">
    <h3>Alerts: </h3>
    <div class="ml-4">
      <p><%= patron.standing_human %></p>

      <% if patron.eligible_for_wage_garnishment? %>
        <p>
          To unbar your account, please
          <a href="<%= lending_policy_accept_path %>">accept the University Libraries lending policy</a>.
        </p>
      <% end %>
    </div>
  </div>
<% end %>

<div class="page-section">
  <h1>Summary</h1>

  <p>Library account record for <strong><%= patron.display_name %></strong></p>

  <% if patron.checkouts.blank? && patron.holds.blank? && patron.fines.blank? %>
      <p>You do not have any outstanding materials or bills.</p>
  <% else %>
    <div class="row">
      <%= render DashboardItemComponent.new(model: 'Fines',
                                            count: patron.fines&.sum(&:owed_amount),
                                            currency: true,
                                            count_term: 'You owe') %>

      <%= render DashboardItemComponent.new(model: 'Checkouts',
                                            count: (illiad_response.illiad_checkouts.count + (patron.checkouts.present? ? patron.checkouts&.length : 0)),
                                            count_term: 'Total checked out',
                                            items: [
                                              { label: 'recalled', count: (illiad_response.ill_recalled + (patron.checkouts.present? ? patron.checkouts&.select(&:recalled?)&.length : 0)) },
                                              { label: 'overdue', count: (illiad_response.ill_overdue + (patron.checkouts.present? ? patron.checkouts&.select(&:overdue?)&.length : 0)) }
                                            ]) %>

      <%= render DashboardItemComponent.new(model: 'Holds',
                                            count: (illiad_response.illiad_holds.count + (patron.holds.present? ? patron.holds&.length : 0)),
                                            count_term: 'Total holds',
                                            items: [
                                              { label: 'ready for pickup',
                                                count: (illiad_response.ill_ready_for_pickup + (patron.holds.present? ? patron.holds&.select(&:ready_for_pickup?)&.length : 0)) },
                                              { label: 'not yet ready for pickup',
                                                count: (illiad_response.illiad_holds.count - illiad_response.ill_ready_for_pickup + (patron.holds.present? ? patron.holds&.reject(&:ready_for_pickup?)&.length : 0)) }
                                            ]) %>
    </div>
  <% end %>

</div>
